name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs: 
  build_and_test:

    runs-on: ubuntu-latest

    steps:
  
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Snyk CLI
      run: npm install -g snyk

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Restore dependencies and build
      run: |
        dotnet restore ./pkatu-pipeline-assignment.sln
        dotnet build --no-restore
        dotnet test --no-build --verbosity normal

    - name: Create Docker network
      run: docker network create selenium-network
        
    - name: Build the Docker image
      run: docker build -t pkatu-pipeline-assignment:mytag ./pkatu-pipeline-assignment
    
    - name: Run the Docker image (Application) 
      run: |
        docker run -d --net selenium-network -p 8080:80 --name myapp pkatu-pipeline-assignment:mytag
        docker pull selenium/standalone-chrome:latest
        docker run -d --net selenium-network --name selenium-server \
        --health-cmd='curl -f http://localhost:4444/wd/hub/status || exit 1' \
        --health-interval=10s --health-timeout=5s --health-retries=3 \
        selenium/standalone-chrome:latest 
        sleep 10  # Wait for Selenium server to start


        - name: Check Selenium Server availability
          id: check-selenium
          run: |
          SELENIUM_IP=""
          while [ -z "$SELENIUM_IP" ]; do
          SELENIUM_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' selenium-server)
          if [ -z "$SELENIUM_IP" ]; then
          echo "Waiting for Selenium server..."
         sleep 5
         fi
         done
         echo "Selenium server is up and running. IP: $SELENIUM_IP"
         continue-on-error: true

         - name: Run Selenium Tests
           run: |
           cd ./pkatu-pipeline-assignment
           npx selenium-side-runner --server http://$SELENIUM_IP:4444/wd/hub --capabilities browserName=chrome,goog:chromeOptions.args=[--headless,--disable-gpu,--window-size=1920x1080] ./pkatu-pipeline-assignment.side
           needs: check-selenium

    - name: Run Selenium Tests
      run: | 
  
           cd ./pkatu-pipeline-assignment  # Navigate to the project directory
           npx selenium-side-runner --server http://SELENIUM_SERVER_IP:4444/wd/hub --capabilities browserName=chrome,goog:chromeOptions.args=[--headless,--disable-gpu,--window-size=1920x1080] ./pkatu-pipeline-assignment.side
