# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs: 
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14' # Specify the Node.js version

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Setup .NET
        uses: actions/setup-dotnet@v3

      - name: Restore dependencies
        run: dotnet restore ./pkatu-pipeline-assignment.sln

      - name: Change directory and Run Snyk to check for vulnerabilities
        run: |
          cd ./pkatu-pipeline-assignment
          snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  build_and_deploy_docker:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - uses: actions/checkout@v3 
    - name: Build the Docker image    
      run: docker build . --file pkatu-pipeline-assignment/Dockerfile --tag pkatu-pipeline-assignment:mytag
    - name: Run the Docker image
      run: docker run -d -p 8080:80 pkatu-pipeline-assignment:mytag

    - name: Wait for the server to be ready
      run: |
        for i in {1..30}; do # Wait up to 30 seconds
        nc -z localhost 8080 && echo "Server is up" && break
        echo "Waiting for server..."
        sleep 1
        done

    
    - name: Run Selenium Server
      run: docker run -d -p 4444:4444 --name selenium-server selenium/standalone-chrome:latest

  selenium_tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Selenium Side Runner
      run: npm install -g selenium-side-runner

    - name: Setup ChromeDriver
      run: |
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
        echo "Using ChromeDriver version: $CHROMEDRIVER_VERSION"
        wget "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver



    - name: List files in the current directory
      run: ls -l ${{ github.workspace }}
    - name: Run Selenium Tests
      run: |
       selenium-side-runner --server http://selenium-server:4444/wd/hub --capabilities browserName=chrome,goog:chromeOptions.args=[--headless,--disable-gpu,--window-size=1920x1080] ./pkatu-pipeline-assignment/pkatu-pipeline-assignment.side
