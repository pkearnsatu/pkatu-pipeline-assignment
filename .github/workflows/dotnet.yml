name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs: 
  build_and_test:

    runs-on: ubuntu-latest

    steps:
  
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install Snyk CLI
      run: npm install -g snyk

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Restore dependencies and build
      run: |
        dotnet restore ./pkatu-pipeline-assignment.sln
        dotnet build --no-restore
        dotnet test --no-build --verbosity normal

    - name: Create Docker network
      run: docker network create selenium-network


    - name: Start Selenium Server
      run: |
        docker pull selenium/standalone-chrome:latest
        docker run -d --net selenium-network --name selenium-server -p 4444:4444 selenium/standalone-chrome:latest

    
    - name: Build and deploy to myapp
      run: |
         docker build -t pkatu-pipeline-assignment:mytag ./pkatu-pipeline-assignment
         docker stop myapp || true
         docker rm myapp || true   

         docker run -d --net selenium-network -p 8080:80 --name myapp pkatu-pipeline-assignment:mytag
      continue-on-error: true
  

    - name: Check Selenium Server availability
      id: check-selenium
      run: |
          SELENIUM_IP=""
          while [ -z "$SELENIUM_IP" ]; do
          SELENIUM_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' myapp)
          if [ -z "$SELENIUM_IP" ]; then
          echo "Waiting for Selenium server..."
          sleep 5
          fi
          done
          echo "Selenium server is up and running. IP: $SELENIUM_IP"




    - name: List Docker containers and network info
      run: |
        docker ps
        docker network inspect selenium-network




    - name: Run Selenium Tests
      run: |
        cd ./pkatu-pipeline-assignment  
        npx selenium-side-runner --server http://selenium-server:4444/wd/hub --capabilities browserName=chrome,goog:chromeOptions.args=[--headless,--disable-gpu,--window-size=1920x1080] ./pkatu-pipeline-assignment.side



    

    - name: Check Selenium Server availability
      id: check-selenium-server
      run: |
        SELENIUM_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' myapp)
        if [ -z "$SELENIUM_IP" ]; then
          echo "Selenium server container not found"
          exit 1
        fi
        echo "Found Selenium server at IP: $SELENIUM_IP"

        SELENIUM_PORT=4444
        SELENIUM_READY=false

        while [ "$SELENIUM_READY" = false ]; do
          echo "Checking if Selenium server is ready..."
          SELENIUM_STATUS=$(curl -s "http://$SELENIUM_IP:$SELENIUM_PORT/wd/hub/status" | grep -o '"ready":true' || true)

          if [ "$SELENIUM_STATUS" = '"ready":true' ]; then
            SELENIUM_READY=true
            echo "Selenium server is ready."
          else
            echo "Waiting for Selenium server..."
            sleep 5
          fi
        done

        

    - name: Run Selenium Tests
      run: |
        cd ./pkatu-pipeline-assignment  
        npx selenium-side-runner --server http:/172.18.0.2:4444/wd/hub --capabilities browserName=chrome,goog:chromeOptions.args=[--headless,--disable-gpu,--window-size=1920x1080] ./pkatu-pipeline-assignment.side
        needs: check-selenium
